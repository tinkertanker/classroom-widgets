version: '3.8'

# ============================================
# Production Docker Compose
# ============================================
# Usage: docker-compose -f docker-compose.prod.yml up -d
# Requires: .env.production file with real secrets
#
# For nginx-proxy setup, this uses:
# - VIRTUAL_HOST for domain routing
# - LETSENCRYPT_HOST for SSL certificates

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        # Build-time variables (baked into the image)
        - VITE_SERVER_URL=${VITE_SERVER_URL}
        - VITE_SHORTIO_API_KEY=${VITE_SHORTIO_API_KEY}
        - VITE_SHORTIO_BASE_URL=${VITE_SHORTIO_BASE_URL}
    image: classroom-widgets-frontend:latest
    container_name: classroom-widgets-frontend
    expose:
      - 80
    environment:
      # nginx-proxy configuration
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=${FRONTEND_DOMAIN}
      - LETSENCRYPT_HOST=${FRONTEND_DOMAIN}
      - LETSENCRYPT_EMAIL=${FRONTEND_EMAIL}
    networks:
      - devtksg
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: ./server/Dockerfile.prod
    container_name: classroom-widgets-backend
    image: classroom-widgets-backend:latest
    expose:
      - 3001
    environment:
      # Application configuration
      - NODE_ENV=production
      - PORT=3001
      - CORS_ORIGINS=${CORS_ORIGINS}
      # nginx-proxy configuration
      - VIRTUAL_PORT=3001
      - VIRTUAL_HOST=${BACKEND_DOMAIN}
      - LETSENCRYPT_HOST=${BACKEND_DOMAIN}
      - LETSENCRYPT_EMAIL=${BACKEND_EMAIL}
    networks:
      - devtksg
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  devtksg:
    external: true
